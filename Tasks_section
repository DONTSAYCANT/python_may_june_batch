Tasks May 27:

pgm1:

    radius = 20 
    calculate perimeter of circle : 2 pi radius
        
pgm2: 
    
    radius = 99.10  height = 10.5
    area of cone = 1/3 pi r2 h
    output ===> int 

pgm3: 
    
    five datatypes: 10-15 line program
        #str int float boolen complex
        
pgm4: 
    
    rules for creating variable

Tasks May 28, 2021

#Task1:
#       int   str   bool  float
#int 
#str
#bool
#float

#Task 2

    radius = 20 
    calculate perimeter of circle : 2 pi radius
        
#Task3
    
    radius = 99.10 (float)  height = 10.5 (int)
    area of cone = 1/3 pi r2 h
    output ===> int 
    
#Task4:

#Get input from the user

a = input()
print(len(a))

computer
wikipedia

#Print middle letter of the string

#Indexing in python



Tasks  May 29

#Task1
#[from (including) : to (excluding)] 
a= "computer_technology"
print(a[2:5])
print(a[-4:-1])
print(a[0:3])
print(a[:3])
print(a[2:])
print(a[:])
print(a[2:-1])
print(a[-5:5])
print(a[-12:-6])
print(a[-12:12])

Task2:

a= "python"
print(a[2:5])
print(a[2:5:1])
print(a[2:5:2])
print(a[:5:3])
print(a[::3])
print(a[-3::3])


=============================
Tasks May 31
============================

Task1: Inbuilt functions 20 functions with one example program

Task2 / Task3 / Task4:

#Task2. Get two values (input) ===> number, string

#7 , "python" ===> pythonpythonpythonpythonpythonpythonpython777777

#3 , "perl"   ===> perlperlperl3333

#Task3. Get two values (input) ===> string, number

#computer_science, 3 ===> mocputer_scieecn

#biology , 2  ===> iboloyg

#capital programs strings

#Task4:

#get two strings from user  computer science  ==> input 

#step 1 ==> comPuter  sciEnce

#step 2 ===> concatenate both ==> comPutersciEnce

#step 3 ===> comPuteRsciEnce

#Task5:

#Get one string (Captial) ==> PYTHON
#Convert middle letter of the string in to small

PYThON


#Tasks: May 5

#Task 1: 

#emi = pnr / 100

p = integer
n = integer
r = float

emi find (integer) ===> format 

#Task 2:

https://www.w3schools.com/python/python_ref_string.asp (1 program per method)

#Tasks: June 6:

#Task1:

5 hacker rank programs

What's your name
Mutation
write a function
print function
swap case

https://www.w3schools.com/python/python_lists.asp
https://www.tutorialspoint.com/python/python_lists.htm



June 8 Tasks:

Task1:

https://www.w3schools.com/python/python_ref_list.asp

Task2:
List

#Create an empty list
#Concatenate with [5,6,7,8]
#add 8,9,1,5,6,7,8,1 elements to that list
#Find frequency of 8 (count)
#find the mean of the list
#find sum (List) + min + Max 
#Find median of the list
#remove duplicates from list and give output in the format of tuple


June 9 Tasks:

Task1:

a = [1,2,3,4,[100,101,102,"Computer_science"],200,203]

#science
#computer

Task2:
a = [1,2,3,4,[101,102,103,[201,202,[999]], 666, 777]]

#666
#201
#102
#999
#777


Task3:

Li1 = [2,3,"python","hello",4,5,0]  

#ll
#thon

Task4:
Li1 = [1,2,3,4,5,[11,22,33,44,55,[111,222,333,444],6666,7777],7777]

print(Li1[5][0])
print(Li1[5][6])
print(Li1[5][-2])
print(Li1[5][7])
print(Li1[6])
print(Li1[5][5][1])

print(Li1[-2][-1])


print(Li1[2][2:4])

Task5: Tuple

#Create two tuples (1,4,5,6,7,8) (5,6,7,8,9)
#Find the common elements between two tuples
#Concatenate both tuples and remove duplicates from tuple
#Find the index value of 9 (after concatenation)
#multiply above elements 3 times


June 10 

Task1:  #https://www.w3schools.com/python/python_ref_set.asp


Task2: Sets

#Create two empty sets
#update set1 with 7,8,9,1,2,3,4,5,0
#update set2 with 4,5,6,0
#check whether set2 is subset of set1 or no ?
#check whether both have common elements are no ?
#remove 8 from set 1 and set 2 ==> find the inferences
#discard 0 from set1 and set2 
#find collection of both sets ===> set1 and set2


June 11

Task1:

 Dictionary:

#create a dictionary
#{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "bobtn" from above dictionary
#Extract "arbeg" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"

Task2:
Study difference table
Study String list tuple set dict methods



June 13 Tasks:

#program1
#Get one string from user
#extract middle letter of the string
#check whether middle letter is vowel or no

#program2
#Get one string from user
#Find the middle letter
#find ascii value for the middle letter
#check whether ascii value is odd or even

#program3:
#get one string from user
#check whether length of the string is odd or even

#program4:
#Get one string from user
#check whether string is palindrome or no

#program5:
#Get one mark from student
#mark 0 to 100 otherwise invalid mark

#50 + PASS otherwise FAIL
#90 to 100 ===> A  ==> Even + Odd -
#80 to 89 ===> B
#70 to 79 ===> C
#60 to 69 ===> D
#50 to 59 ===> E

#0 to 49 ===> FAIL


#93 ===> A-
#99 ===> A-
#88 ====> B+

#78

#VALID MARK
#PASS MARK
#B+

#program6

#hackerrank Write a function

#program7
#hackerrank Python If-Else

#program8 

#two strings from user
#string 1: python  ==> first + middle + last 
#string 2: ptn

#valid otherwise invalid

#program9:

#two strings from user

#mathematics ===> 4 vowels
#science ==> 3 vowels

#both are equal count or not equal

#program10

#get one integer from user
#armstrong or no (without using loops)

#153 ===> 1^3 + 5^3 + 3^3
#370 ===> 3^3 + 7^3 + 0^3
#371 ====> 3^3 + 7^3 + 1^3


#program 11:
#[123, 124, 125,]  length of list odd or even


#program12:
#Fizz buzz
#Get one number from user
#5
#Multiple of 3 ==> Fizz
#Multiple of 5 ===> buzz
#Multiple of 3 and 5 ===> Fizzbuzz
#None ==> Invalid number


June 15 Tasks:

#References:

#https://www.guru99.com/if-loop-python-conditional-structures.html
#https://realpython.com/python-conditional-statements/
#https://www.w3schools.com/python/python_conditions.asp


12 pgms completion

June 16 Tasks:

12 pgms completion

1. Get a dynamic list from user
2. Get a dynamic dictionary from user
3. print multiples of 5 between 0 to 50 using range function

clues
#1. get number of elements from user
#Loop through range
#append to list/dictionary


a = int(input("enter number of elements"))


for i in range(a):
    val = int(input("enter element"))

June 17 

Taks 1:

#Task 1:

Input:
Li1 = [3,4,5,2,7,8,9,10]

Output:
Li_odd = [3,5,7,9]
Li_even = [4,2,8,10]

#Li1 = [3,4,5,2,7,8,9,10]

#Clue

for i in Li1:
    print(i)
    if i % 2 == 0:
        print("EVEN")
    else:
        print("ODD")
        
Task2:

#Task2:

Input: [-1, -7,8,10,20,21,17,28,-3,0,0,]
    
Output:
neg_LI = [-1,-7,-3]
pos_LI = []
Zeros = []

Numeber of postivie ele: 7
Number nega: 3
Number of zeros: 2

CLue: previous program and len function

#Task 3

{1:10, 2:11, 3:12, 6:15, 10:21, 12:24, 13:23, 14:23, 18:36, 20:40}


key and value ==> even  ==> 3

key and value ==> odd  ===> 1

#dictionary
#items
#%2 == 0 or !=0


June 18 Tasks:

https://www.hackerrank.com/challenges/finding-the-percentage/problem
https://www.hackerrank.com/challenges/nested-list/problem
https://www.hackerrank.com/challenges/find-second-maximum-number-in-a-list/problem

Study below topics

#Factorial
#Fibonacci
#armstrong number
#prime number


Class Tasks:

Get two inputs from user

11  25

print all numbers between first and second while loop

print numbers in descending order

print numbers multiples of three


June 19: Tasks:

#program1:
    
#Get one dynamic list from user

#10 [0,6,5,-3,4,5,3,-2,4,0]

#count ==> no of zeros, no of positive values, no of negative values, no of odd numbers, number of even numbers
#print the elements

#program2:

#Using while loop print multiples of 5 from 10 to 75
#Using while loop print multiples of 8 from 100 to 72

#Using for loop print multiples of 5 from 10 to 75
#Using for loop print multiples of 8 from 100 to 72

#program3:

#two numbers from user 2 25
#2 
#3  fizz
#4
#15
#16
#25

#multiple of 3 ==> fizz
#multiple of 5 ==> buzz
#multiple of 15 ==> fizzbuzz
#Others ===> No fizz and buzz

#Including last number

#program 4

#check whether it's prime or no

#10

#2 up to 10 ===> 2,3,4,5,6,7,8,9

3 % 2

#4 
#2,3

#for else stmt

#program5: list of prime numbers in a range

#range  10 50  100 50

#op ==> prime ==> []
#non prime ==> []

#program 6

#get one integer from user
#armstrong or no (using loops)

#153 ===> 1^3 + 5^3 + 3^3
#370 ===> 3^3 + 7^3 + 0^3
#371 ====> 3^3 + 7^3 + 1^3

#program 7

#Fibonacci series

0 1 1 2 3 5 8 13 21 ...

#while loop
#append
#add list[-1] + list[-2] ==> append

#what is 10th fibonacci number 34

#program 8

Factorial number

5 ==> 5 * 4 * 3* 2 * 1
120

#program 9

#get one number from user

345  3 + 4 + 5 ==> 12

#Should not convert in to string 

int(input())

345

% 10 ==> 5 4 3
// 10 ==> 34 3 0

#program 10

345 3 * 4* 5==> 60

#Should not convert in to string 
#if 0 available convert it in to 1

#Program 11

#multiples of a number 

#Get one integer from the user
#9 ==> 1,3,9
#11 ==> 1,11
#25 ==> 1,5,25

#Program 12

#multiples of a number 

#Get range integer from the user ==> 10 35

#Number with maximum multipliers
#20 ==> 1,2,4,5,10,20
#24 ==> 1,2,3,4,6,8,12

#program 13

#Number with minimum multiplier

#program 14

#Anagram ===> check whether given string is anagram or no

#Two input strings
#pot
#top

#top
#pto

#program 15:

#Square numbers

#range from the user 10 90

#4,5,6,7,8,9

#5 and 8 ===> 0

#op ==> list of square numbers and number of square numbers


Tasks June 23:

Functions:

#function to add two numbers
#function to add two string
#function to add five numbers
#function to print "hello world"
#Function to check palindrome
#Function to check prime number
#Function to five factorial of a number


Test:

Question1: https://www.linkedin.com/posts/coding-club_asked-activity-6813733801924059137-OJ6Z/
        
Question2: Split and join hackerrank
https://www.hackerrank.com/challenges/python-string-split-and-join/problem
    
Question3: Swapcase hackerrank
https://www.hackerrank.com/challenges/swap-case/problem
    
Question4: calculator program (add, sub, mul, div, floor, power, modulo)

Question5: sentence string : starting values (getting only one string user)
        
"welcome to python programming world" ===> wetopnpgwd
"hello world"  ===> howd

Question6: capitalize the first letters
    
"welcome to python programming world" ===> "Welcome To Python Programming World"
"hello world"  ===> HoWd

Question7: Quiz exam
    
Predefined five quizes (static question)
    
Question8:
    
List of strings (dynamic) ===> find string with maximum and minimum number of vowels

Question9:
    
List of strings (dynamic) ==> Sort strings alphatically with out sort function


Question10:
    
Find LCM and GCD of two numbers 

#4,2 ==> GCD 2 LCM ==> 4  


Question11:
    
Get one sentence from user, find the longest and shortest sub string in that sentence

"welcome to python programming world" ==> Long --> programming  shortest ===> to


Question12:
    
Get numbers from users, add it in to list,

[12,14,15,16,21,99] ==>  stop whenever user gives a prime number
Accept only non prime number

Question13:
    
Find a string hackerrank https://www.hackerrank.com/challenges/find-a-string/problem
    
Question14:

get two strings from user, find common sub string between them (largest common)

"python"  "java"  ==> Not common
"cpp"  "c"   ===> "c"
"windows" "hidows"  ==> "dows"

Question15:

Get one string from user, count number of lower case, upper case, numbers, special chars, in that

valueA67@


Question16:
write program to solve ploynomial equation x3 + 2x2 - x + 9 ==> 10


Future pgms:


Exit come outside
Paper scissor stone program














