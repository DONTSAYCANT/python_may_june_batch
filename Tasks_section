Tasks May 27:

pgm1:

    radius = 20 
    calculate perimeter of circle : 2 pi radius
        
pgm2: 
    
    radius = 99.10  height = 10.5
    area of cone = 1/3 pi r2 h
    output ===> int 

pgm3: 
    
    five datatypes: 10-15 line program
        #str int float boolen complex
        
pgm4: 
    
    rules for creating variable

Tasks May 28, 2021

#Task1:
#       int   str   bool  float
#int 
#str
#bool
#float

#Task 2

    radius = 20 
    calculate perimeter of circle : 2 pi radius
        
#Task3
    
    radius = 99.10 (float)  height = 10.5 (int)
    area of cone = 1/3 pi r2 h
    output ===> int 
    
#Task4:

#Get input from the user

a = input()
print(len(a))

computer
wikipedia

#Print middle letter of the string

#Indexing in python



Tasks  May 29

#Task1
#[from (including) : to (excluding)] 
a= "computer_technology"
print(a[2:5])
print(a[-4:-1])
print(a[0:3])
print(a[:3])
print(a[2:])
print(a[:])
print(a[2:-1])
print(a[-5:5])
print(a[-12:-6])
print(a[-12:12])

Task2:

a= "python"
print(a[2:5])
print(a[2:5:1])
print(a[2:5:2])
print(a[:5:3])
print(a[::3])
print(a[-3::3])


=============================
Tasks May 31
============================

Task1: Inbuilt functions 20 functions with one example program

Task2 / Task3 / Task4:

#Task2. Get two values (input) ===> number, string

#7 , "python" ===> pythonpythonpythonpythonpythonpythonpython777777

#3 , "perl"   ===> perlperlperl3333

#Task3. Get two values (input) ===> string, number

#computer_science, 3 ===> mocputer_scieecn

#biology , 2  ===> iboloyg

#capital programs strings

#Task4:

#get two strings from user  computer science  ==> input 

#step 1 ==> comPuter  sciEnce

#step 2 ===> concatenate both ==> comPutersciEnce

#step 3 ===> comPuteRsciEnce

#Task5:

#Get one string (Captial) ==> PYTHON
#Convert middle letter of the string in to small

PYThON


#Tasks: May 5

#Task 1: 

#emi = pnr / 100

p = integer
n = integer
r = float

emi find (integer) ===> format 

#Task 2:

https://www.w3schools.com/python/python_ref_string.asp (1 program per method)

#Tasks: June 6:

#Task1:

5 hacker rank programs

What's your name
Mutation
write a function
print function
swap case

https://www.w3schools.com/python/python_lists.asp
https://www.tutorialspoint.com/python/python_lists.htm



June 8 Tasks:

Task1:

https://www.w3schools.com/python/python_ref_list.asp

Task2:
List

#Create an empty list
#Concatenate with [5,6,7,8]
#add 8,9,1,5,6,7,8,1 elements to that list
#Find frequency of 8 (count)
#find the mean of the list
#find sum (List) + min + Max 
#Find median of the list
#remove duplicates from list and give output in the format of tuple


June 9 Tasks:

Task1:

a = [1,2,3,4,[100,101,102,"Computer_science"],200,203]

#science
#computer

Task2:
a = [1,2,3,4,[101,102,103,[201,202,[999]], 666, 777]]

#666
#201
#102
#999
#777


Task3:

Li1 = [2,3,"python","hello",4,5,0]  

#ll
#thon

Task4:
Li1 = [1,2,3,4,5,[11,22,33,44,55,[111,222,333,444],6666,7777],7777]

print(Li1[5][0])
print(Li1[5][6])
print(Li1[5][-2])
print(Li1[5][7])
print(Li1[6])
print(Li1[5][5][1])

print(Li1[-2][-1])


print(Li1[2][2:4])

Task5: Tuple

#Create two tuples (1,4,5,6,7,8) (5,6,7,8,9)
#Find the common elements between two tuples
#Concatenate both tuples and remove duplicates from tuple
#Find the index value of 9 (after concatenation)
#multiply above elements 3 times


June 10 

Task1:  #https://www.w3schools.com/python/python_ref_set.asp


Task2: Sets

#Create two empty sets
#update set1 with 7,8,9,1,2,3,4,5,0
#update set2 with 4,5,6,0
#check whether set2 is subset of set1 or no ?
#check whether both have common elements are no ?
#remove 8 from set 1 and set 2 ==> find the inferences
#discard 0 from set1 and set2 
#find collection of both sets ===> set1 and set2


June 11

Task1:

 Dictionary:

#create a dictionary
#{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "bobtn" from above dictionary
#Extract "arbeg" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"

Task2:
Study difference table
Study String list tuple set dict methods



June 13 Tasks:

#program1
#Get one string from user
#extract middle letter of the string
#check whether middle letter is vowel or no

#program2
#Get one string from user
#Find the middle letter
#find ascii value for the middle letter
#check whether ascii value is odd or even

#program3:
#get one string from user
#check whether length of the string is odd or even

#program4:
#Get one string from user
#check whether string is palindrome or no

#program5:
#Get one mark from student
#mark 0 to 100 otherwise invalid mark

#50 + PASS otherwise FAIL
#90 to 100 ===> A  ==> Even + Odd -
#80 to 89 ===> B
#70 to 79 ===> C
#60 to 69 ===> D
#50 to 59 ===> E

#0 to 49 ===> FAIL


#93 ===> A-
#99 ===> A-
#88 ====> B+

#78

#VALID MARK
#PASS MARK
#B+

#program6

#hackerrank Write a function

#program7
#hackerrank Python If-Else

#program8 

#two strings from user
#string 1: python  ==> first + middle + last 
#string 2: ptn

#valid otherwise invalid

#program9:

#two strings from user

#mathematics ===> 4 vowels
#science ==> 3 vowels

#both are equal count or not equal

#program10

#get one integer from user
#armstrong or no (without using loops)

#153 ===> 1^3 + 5^3 + 3^3
#370 ===> 3^3 + 7^3 + 0^3
#371 ====> 3^3 + 7^3 + 1^3


#program 11:
#[123, 124, 125,]  length of list odd or even


#program12:
#Fizz buzz
#Get one number from user
#5
#Multiple of 3 ==> Fizz
#Multiple of 5 ===> buzz
#Multiple of 3 and 5 ===> Fizzbuzz
#None ==> Invalid number


June 15 Tasks:

#References:

#https://www.guru99.com/if-loop-python-conditional-structures.html
#https://realpython.com/python-conditional-statements/
#https://www.w3schools.com/python/python_conditions.asp


12 pgms completion

June 16 Tasks:

12 pgms completion

1. Get a dynamic list from user
2. Get a dynamic dictionary from user
3. print multiples of 5 between 0 to 50 using range function

clues
#1. get number of elements from user
#Loop through range
#append to list/dictionary


a = int(input("enter number of elements"))


for i in range(a):
    val = int(input("enter element"))









